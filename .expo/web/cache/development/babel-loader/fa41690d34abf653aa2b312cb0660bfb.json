{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport cartSlice from \"./reducers/cartItems\";\nimport authSlice from \"./reducers/auth\";\nvar persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage: AsyncStorage\n};\nvar persistedReducer = persistReducer(persistConfig, cartSlice);\nvar persistedReducerAuth = persistReducer(persistConfig, authSlice);\nexport var store = configureStore({\n  reducer: {\n    cart: persistedReducer,\n    auth: persistedReducerAuth\n  },\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/overlord/Desktop/Work/native-project/src/redux/store.js"],"names":["configureStore","AsyncStorage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","cartSlice","authSlice","persistConfig","key","version","storage","persistedReducer","persistedReducerAuth","store","reducer","cart","auth","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,SAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBC,EAAAA,OAAO,EAAEd;AAHW,CAAtB;AAMA,IAAMe,gBAAgB,GAAGb,cAAc,CAACS,aAAD,EAAgBF,SAAhB,CAAvC;AACA,IAAMO,oBAAoB,GAAGd,cAAc,CAACS,aAAD,EAAgBD,SAAhB,CAA3C;AAEA,OAAO,IAAMO,KAAK,GAAGlB,cAAc,CAAC;AAClCmB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEJ,gBAAR;AAA0BK,IAAAA,IAAI,EAAEJ;AAAhC,GADyB;AAElCK,EAAAA,UAAU,EAAE,oBAACC,oBAAD;AAAA,WACVA,oBAAoB,CAAC;AACnBC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,cAAc,EAAE,CAACrB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,KAAD,CADV;AAAA;AAFsB,CAAD,CAA5B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport cartSlice from \"./reducers/cartItems\";\r\nimport authSlice from \"./reducers/auth\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage: AsyncStorage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, cartSlice);\r\nconst persistedReducerAuth = persistReducer(persistConfig, authSlice);\r\n\r\nexport const store = configureStore({\r\n  reducer: { cart: persistedReducer, auth: persistedReducerAuth },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}