{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./src/redux/store.js\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport { getTotals } from \"./src/redux/reducers/cartItems\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar persistor = persistStore(store);\nvar homeName = \"მთავარი\";\nvar basketName = \"კალათა\";\nvar authName = \"პროფილი\";\nvar Tab = createBottomTabNavigator();\nstore.dispatch(getTotals());\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          initialRouteName: homeName,\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                    color = _ref2.color,\n                    size = _ref2.size;\n                var iconName;\n                var rn = route.name;\n\n                if (rn === homeName) {\n                  iconName = focused ? \"home\" : \"home-outline\";\n                } else if (rn === authName) {\n                  iconName = focused ? \"log-in\" : \"log-in-outline\";\n                } else if (rn === basketName) {\n                  iconName = focused ? \"cart\" : \"cart-outline\";\n                  return _jsxs(View, {\n                    style: {\n                      position: \"relative\"\n                    },\n                    children: [_jsx(Ionicons, {\n                      name: iconName,\n                      size: size,\n                      color: color\n                    }), _jsx(Text, {\n                      style: {\n                        position: \"absolute\",\n                        width: \"15px\",\n                        height: \"15px\",\n                        borderRadius: \"50%\",\n                        top: \"-3px\",\n                        right: \"-3px\",\n                        whiteSpace: \"nowrap\",\n                        backgroundColor: \"tomato\",\n                        fontSize: \"10px\"\n                      },\n                      children: \"15\"\n                    })]\n                  });\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              },\n              tabBarActiveTintColor: \"#211844\",\n              tabBarInactiveTintColor: \"grey\",\n              tabBarLabelStyle: {\n                paddingBottom: 10,\n                fontSize: 10\n              },\n              tabBarStyle: {\n                height: 60\n              }\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: authName,\n            component: Auth\n          }), _jsx(Tab.Screen, {\n            name: homeName,\n            component: ProductsPage\n          }), _jsx(Tab.Screen, {\n            name: basketName,\n            component: Basket\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/overlord/Desktop/Work/native-project/App.js"],"names":["NavigationContainer","createBottomTabNavigator","Auth","Basket","ProductsPage","Ionicons","Provider","store","PersistGate","persistStore","getTotals","persistor","homeName","basketName","authName","Tab","dispatch","App","route","tabBarIcon","focused","color","size","iconName","rn","name","position","width","height","borderRadius","top","right","whiteSpace","backgroundColor","fontSize","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","tabBarStyle"],"mappings":"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","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./src/redux/store.js\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport { getTotals } from \"./src/redux/reducers/cartItems\";\nimport { View, Text } from \"react-native-web\";\n\nlet persistor = persistStore(store);\n\nconst homeName = \"მთავარი\";\nconst basketName = \"კალათა\";\nconst authName = \"პროფილი\";\n\nconst Tab = createBottomTabNavigator();\n\nstore.dispatch(getTotals());\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <NavigationContainer>\n          <Tab.Navigator\n            initialRouteName={homeName}\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n                let rn = route.name;\n\n                if (rn === homeName) {\n                  iconName = focused ? \"home\" : \"home-outline\";\n                } else if (rn === authName) {\n                  iconName = focused ? \"log-in\" : \"log-in-outline\";\n                } else if (rn === basketName) {\n                  iconName = focused ? \"cart\" : \"cart-outline\";\n\n                  return (\n                    <View style={{ position: \"relative\" }}>\n                      <Ionicons name={iconName} size={size} color={color} />\n                      <Text\n                        style={{\n                          position: \"absolute\",\n                          width: \"15px\",\n                          height: \"15px\",\n                          borderRadius: \"50%\",\n                          top: \"-3px\",\n                          right: \"-3px\",\n                          whiteSpace: \"nowrap\",\n                          backgroundColor: \"tomato\",\n                          fontSize: \"10px\",\n                        }}\n                      >\n                        15\n                      </Text>\n                    </View>\n                  );\n                }\n\n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n              tabBarActiveTintColor: \"#211844\",\n              tabBarInactiveTintColor: \"grey\",\n              tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },\n              tabBarStyle: { height: 60 },\n            })}\n          >\n            <Tab.Screen name={authName} component={Auth} />\n            <Tab.Screen name={homeName} component={ProductsPage} />\n            <Tab.Screen name={basketName} component={Basket} />\n          </Tab.Navigator>\n        </NavigationContainer>\n      </PersistGate>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}