{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"მთავარი\";\nvar basketName = \"კალათა\";\nvar authName = \"პროფილი\";\nvar Tab = createBottomTabNavigator();\nexport default function Main() {\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      logState = _useSelector.logState;\n\n  console.log(logState);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLogged = _React$useState2[0],\n      setIsLogged = _React$useState2[1];\n\n  var checkToken = function checkToken() {\n    var value;\n    return _regeneratorRuntime.async(function checkToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setIsLogged(true);\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  React.useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(checkToken());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: authName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (rn === authName) {\n              iconName = focused ? \"log-in\" : \"log-in-outline\";\n            } else if (rn === basketName) {\n              iconName = focused ? \"cart\" : \"cart-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#211844\",\n          tabBarInactiveTintColor: \"grey\",\n          tabBarLabelStyle: {\n            paddingBottom: 10,\n            fontSize: 10\n          },\n          tabBarStyle: {\n            height: 60\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: authName,\n        component: Auth\n      }), _jsx(Tab.Screen, {\n        name: homeName,\n        component: ProductsPage,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation,\n              route = _ref3.route;\n          return {\n            tabPress: function tabPress(e) {\n              e.preventDefault();\n\n              if (isLogged) {\n                navigation.navigate(homeName);\n              }\n            }\n          };\n        }\n      }), _jsx(Tab.Screen, {\n        name: basketName,\n        component: Basket,\n        listeners: function listeners(_ref4) {\n          var navigation = _ref4.navigation,\n              route = _ref4.route;\n          return {\n            tabPress: function tabPress(e) {\n              e.preventDefault();\n\n              if (isLogged) {\n                navigation.navigate(basketName);\n              }\n            }\n          };\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/overlord/Desktop/Work/native-project/Main.jsx"],"names":["React","NavigationContainer","createBottomTabNavigator","Auth","Basket","ProductsPage","Ionicons","AsyncStorage","useSelector","homeName","basketName","authName","Tab","Main","state","auth","logState","console","log","useState","isLogged","setIsLogged","checkToken","getItem","value","useEffect","route","tabBarIcon","focused","color","size","iconName","rn","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","tabBarStyle","height","navigation","tabPress","e","preventDefault","navigate"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Auth from \"./src/pages/Auth\";\r\nimport Basket from \"./src/pages/Basket\";\r\nimport ProductsPage from \"./src/pages/ProductsPage\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst homeName = \"მთავარი\";\r\nconst basketName = \"კალათა\";\r\nconst authName = \"პროფილი\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function Main() {\r\n  const { logState } = useSelector((state) => state.auth);\r\n  console.log(logState);\r\n  const [isLogged, setIsLogged] = React.useState(false);\r\n  const checkToken = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem(\"token\");\r\n      if (value !== null) {\r\n        setIsLogged(true);\r\n      }\r\n    } catch (e) {}\r\n  };\r\n  React.useEffect(async () => {\r\n    await checkToken();\r\n  }, []);\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        initialRouteName={authName}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? \"home\" : \"home-outline\";\r\n            } else if (rn === authName) {\r\n              iconName = focused ? \"log-in\" : \"log-in-outline\";\r\n            } else if (rn === basketName) {\r\n              iconName = focused ? \"cart\" : \"cart-outline\";\r\n            }\r\n\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: \"#211844\",\r\n          tabBarInactiveTintColor: \"grey\",\r\n          tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },\r\n          tabBarStyle: { height: 60 },\r\n        })}\r\n      >\r\n        <Tab.Screen name={authName} component={Auth} />\r\n        <Tab.Screen\r\n          name={homeName}\r\n          component={ProductsPage}\r\n          listeners={({ navigation, route }) => ({\r\n            tabPress: (e) => {\r\n              // Prevent default action\r\n              e.preventDefault();\r\n              if (isLogged) {\r\n                navigation.navigate(homeName);\r\n              }\r\n            },\r\n          })}\r\n        />\r\n        <Tab.Screen\r\n          name={basketName}\r\n          component={Basket}\r\n          listeners={({ navigation, route }) => ({\r\n            tabPress: (e) => {\r\n              // Prevent default action\r\n              e.preventDefault();\r\n              if (isLogged) {\r\n                navigation.navigate(basketName);\r\n              }\r\n            },\r\n          })}\r\n        />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}