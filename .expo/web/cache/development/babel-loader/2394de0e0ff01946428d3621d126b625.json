{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./src/redux/store.js\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar persistor = persistStore(store);\nvar homeName = \"მთავარი\";\nvar basketName = \"კალათა\";\nvar authName = \"პროფილი\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          initialRouteName: authName,\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                    color = _ref2.color,\n                    size = _ref2.size;\n                var iconName;\n                var rn = route.name;\n\n                if (rn === homeName) {\n                  iconName = focused ? \"home\" : \"home-outline\";\n                } else if (rn === authName) {\n                  iconName = focused ? \"log-in\" : \"log-in-outline\";\n                } else if (rn === basketName) {\n                  iconName = focused ? \"cart\" : \"cart-outline\";\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              },\n              tabBarActiveTintColor: \"#211844\",\n              tabBarInactiveTintColor: \"grey\",\n              tabBarLabelStyle: {\n                paddingBottom: 10,\n                fontSize: 10\n              },\n              tabBarStyle: {\n                height: 60\n              }\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: authName,\n            component: Auth\n          }), _jsx(Tab.Screen, {\n            name: homeName,\n            component: ProductsPage\n          }), _jsx(Tab.Screen, {\n            name: basketName,\n            component: Basket\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/overlord/Desktop/Work/native-project/App.js"],"names":["NavigationContainer","createBottomTabNavigator","Auth","Basket","ProductsPage","Ionicons","Provider","store","PersistGate","persistStore","persistor","homeName","basketName","authName","Tab","App","route","tabBarIcon","focused","color","size","iconName","rn","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","tabBarStyle","height"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,IAAIC,SAAS,GAAGD,YAAY,CAACF,KAAD,CAA5B;AAEA,IAAMI,QAAQ,GAAG,SAAjB;AACA,IAAMC,UAAU,GAAG,QAAnB;AACA,IAAMC,QAAQ,GAAG,SAAjB;AAEA,IAAMC,GAAG,GAAGb,wBAAwB,EAApC;AACA,eAAe,SAASc,GAAT,GAAe;AAC5B,SACE,KAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA,cACE,KAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAA4B,MAAA,SAAS,EAAEG,SAAvC;AAAA,gBACE,KAAC,mBAAD;AAAA,kBACE,MAAC,GAAD,CAAK,SAAL;AACE,UAAA,gBAAgB,EAAEG,QADpB;AAEE,UAAA,aAAa,EAAE;AAAA,gBAAGG,KAAH,QAAGA,KAAH;AAAA,mBAAgB;AAC7BC,cAAAA,UAAU,EAAE,2BAA8B;AAAA,oBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,oBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,oBAAXC,IAAW,SAAXA,IAAW;AACxC,oBAAIC,QAAJ;AACA,oBAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;AAEA,oBAAID,EAAE,KAAKX,QAAX,EAAqB;AACnBU,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACD,iBAFD,MAEO,IAAII,EAAE,KAAKT,QAAX,EAAqB;AAC1BQ,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;AACD,iBAFM,MAEA,IAAII,EAAE,KAAKV,UAAX,EAAuB;AAC5BS,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACD;;AAED,uBAAO,KAAC,QAAD;AAAU,kBAAA,IAAI,EAAEG,QAAhB;AAA0B,kBAAA,IAAI,EAAED,IAAhC;AAAsC,kBAAA,KAAK,EAAED;AAA7C,kBAAP;AACD,eAd4B;AAe7BK,cAAAA,qBAAqB,EAAE,SAfM;AAgB7BC,cAAAA,uBAAuB,EAAE,MAhBI;AAiB7BC,cAAAA,gBAAgB,EAAE;AAAEC,gBAAAA,aAAa,EAAE,EAAjB;AAAqBC,gBAAAA,QAAQ,EAAE;AAA/B,eAjBW;AAkB7BC,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,MAAM,EAAE;AAAV;AAlBgB,aAAhB;AAAA,WAFjB;AAAA,qBAuBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAEjB,QAAlB;AAA4B,YAAA,SAAS,EAAEX;AAAvC,YAvBF,EAwBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAES,QAAlB;AAA4B,YAAA,SAAS,EAAEP;AAAvC,YAxBF,EAyBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAEQ,UAAlB;AAA8B,YAAA,SAAS,EAAET;AAAzC,YAzBF;AAAA;AADF;AADF;AADF,IADF;AAmCD","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./src/redux/store.js\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\";\n\nlet persistor = persistStore(store);\n\nconst homeName = \"მთავარი\";\nconst basketName = \"კალათა\";\nconst authName = \"პროფილი\";\n\nconst Tab = createBottomTabNavigator();\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <NavigationContainer>\n          <Tab.Navigator\n            initialRouteName={authName}\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n                let rn = route.name;\n\n                if (rn === homeName) {\n                  iconName = focused ? \"home\" : \"home-outline\";\n                } else if (rn === authName) {\n                  iconName = focused ? \"log-in\" : \"log-in-outline\";\n                } else if (rn === basketName) {\n                  iconName = focused ? \"cart\" : \"cart-outline\";\n                }\n\n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n              tabBarActiveTintColor: \"#211844\",\n              tabBarInactiveTintColor: \"grey\",\n              tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },\n              tabBarStyle: { height: 60 },\n            })}\n          >\n            <Tab.Screen name={authName} component={Auth} />\n            <Tab.Screen name={homeName} component={ProductsPage} />\n            <Tab.Screen name={basketName} component={Basket} />\n          </Tab.Navigator>\n        </NavigationContainer>\n      </PersistGate>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}