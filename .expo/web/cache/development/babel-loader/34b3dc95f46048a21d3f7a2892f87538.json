{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar basketName = \"Basket\";\nvar authName = \"Auth\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (rn === authName) {\n              iconName = focused ? \"log-in\" : \"log-in-outline\";\n            } else if (rn === basketName) {\n              iconName = focused ? \"cart\" : \"cart-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: \"tomato\",\n        inactiveTintColor: \"grey\",\n        labelStyle: {\n          paddingBottom: 10,\n          paddingTop: 10,\n          fontSize: 10\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: authName,\n        component: Auth\n      }), _jsx(Tab.Screen, {\n        name: homeName,\n        component: ProductsPage\n      }), _jsx(Tab.Screen, {\n        name: basketName,\n        component: Basket\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/overlord/Desktop/Work/native-project/App.js"],"names":["NavigationContainer","createBottomTabNavigator","Auth","Basket","ProductsPage","Ionicons","homeName","basketName","authName","Tab","App","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","paddingTop","fontSize"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AACA,OAAOC,QAAP;;;AAEA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,UAAU,GAAG,QAAnB;AACA,IAAMC,QAAQ,GAAG,MAAjB;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;AAEA,eAAe,SAASS,GAAT,GAAe;AAC5B,SACE,KAAC,mBAAD;AAAA,cACE,MAAC,GAAD,CAAK,SAAL;AACE,MAAA,gBAAgB,EAAEJ,QADpB;AAEE,MAAA,aAAa,EAAE;AAAA,YAAGK,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC7BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACxC,gBAAIC,QAAJ;AACA,gBAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;AAEA,gBAAID,EAAE,KAAKX,QAAX,EAAqB;AACnBU,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACD,aAFD,MAEO,IAAII,EAAE,KAAKT,QAAX,EAAqB;AAC1BQ,cAAAA,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;AACD,aAFM,MAEA,IAAII,EAAE,KAAKV,UAAX,EAAuB;AAC5BS,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACD;;AAGD,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEG,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAED;AAA7C,cAAP;AACD;AAf4B,SAAhB;AAAA,OAFjB;AAmBE,MAAA,aAAa,EAAE;AACbK,QAAAA,eAAe,EAAE,QADJ;AAEbC,QAAAA,iBAAiB,EAAE,MAFN;AAGbC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,aAAa,EAAE,EAAjB;AAAqBC,UAAAA,UAAU,EAAE,EAAjC;AAAqCC,UAAAA,QAAQ,EAAE;AAA/C;AAHC,OAnBjB;AAAA,iBAyBE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEhB,QAAlB;AAA4B,QAAA,SAAS,EAAEN;AAAvC,QAzBF,EA0BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,QAAlB;AAA4B,QAAA,SAAS,EAAEF;AAAvC,QA1BF,EA2BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEG,UAAlB;AAA8B,QAAA,SAAS,EAAEJ;AAAzC,QA3BF;AAAA;AADF,IADF;AAiCD","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Auth from \"./src/pages/Auth\";\nimport Basket from \"./src/pages/Basket\";\nimport ProductsPage from \"./src/pages/ProductsPage\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nconst homeName = \"Home\";\nconst basketName = \"Basket\";\nconst authName = \"Auth\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName={homeName}\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            let rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (rn === authName) {\n              iconName = focused ? \"log-in\" : \"log-in-outline\";\n            } else if (rn === basketName) {\n              iconName = focused ? \"cart\" : \"cart-outline\";\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: \"tomato\",\n          inactiveTintColor: \"grey\",\n          labelStyle: { paddingBottom: 10, paddingTop: 10, fontSize: 10 },\n        }}\n      >\n        <Tab.Screen name={authName} component={Auth} />\n        <Tab.Screen name={homeName} component={ProductsPage} />\n        <Tab.Screen name={basketName} component={Basket} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}