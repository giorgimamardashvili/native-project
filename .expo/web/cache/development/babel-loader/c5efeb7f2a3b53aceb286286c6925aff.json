{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport cartSlice from \"./reducers/cartItems\";\nvar persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage: storage\n};\nvar persistedReducer = persistReducer(persistConfig, cartSlice);\nvar store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/overlord/Desktop/Work/native-project/src/redux/store.js"],"names":["configureStore","AsyncStorage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","cartSlice","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBJ,EAAAA,OAAO,EAAPA;AAHoB,CAAtB;AAMA,IAAMK,gBAAgB,GAAGZ,cAAc,CAACS,aAAD,EAAgBD,SAAhB,CAAvC;AAEA,IAAMK,KAAK,GAAGhB,cAAc,CAAC;AAC3BiB,EAAAA,OAAO,EAAEF,gBADkB;AAE3BG,EAAAA,UAAU,EAAE,oBAACC,oBAAD;AAAA,WACVA,oBAAoB,CAAC;AACnBC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,cAAc,EAAE,CAACjB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,KAAD,CADV;AAAA;AAFe,CAAD,CAA5B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport cartSlice from \"./reducers/cartItems\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, cartSlice);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     cart: cartSlice,\r\n//   },\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}